import tensorflow as tf
from tensorflow.keras import layers, models

X = [[[0, 0], [0, 1], [1, 0], [1, 1]]]  # Mude o formato dos dados de entrada para se adequar ao formato de entrada da LSTM
y = [[0], [1], [1], [0]]

model = models.Sequential()
model.add(layers.LSTM(8, input_shape=(4, 2)))  # Defina a camada de entrada para corresponder ao formato de entrada
model.add(layers.Dense(1, activation='sigmoid'))

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Reorganize seus dados para se adequar ao formato de entrada da LSTM
X = tf.convert_to_tensor(X, dtype=tf.float32)

model.fit(X, y, epochs=1500, batch_size=4)

loss, accuracy = model.evaluate(X, y)
print(f'Loss: {loss}, Accuracy: {accuracy}')

new_data = [[[0, 0], [0, 1]]]  # Ajuste o formato dos novos dados para corresponder ao formato de entrada
new_data = tf.convert_to_tensor(new_data, dtype=tf.float32)

predictions = model.predict(new_data)
print(f'Predictions: {predictions}')
